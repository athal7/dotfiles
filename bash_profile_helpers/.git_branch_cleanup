#!bin/bash

function __cleanup_branch_list_files {
  files=(./local-branch-list ./remote-branch-list ./orphaned-local-branch-list ./orphaned-remote-branch-list)
  for i in ${files[@]}; do if [ -f $i ]; then rm $i; fi; done
}

function __set_branches {
  git branch -r | sed -n "/"$1"\// p" | sed "s/"$1"\///" > ./remote-branch-list
  git branch | sed "s/*/ /g" > ./local-branch-list
  diff -u -b ./remote-branch-list ./local-branch-list | grep '^-' | sed 's|^-||' | grep -v '^trunk$' | grep -v '^--' > ./orphaned-remote-branch-list
  diff -u -b ./local-branch-list ./remote-branch-list | grep '^-' | sed 's|^-||' | grep -v '^trunk$' | grep -v '^--' > ./orphaned-local-branch-list
}

function orphaned_branches {
  __set_branches $1

  echo "REMOTE"
  cat ./orphaned-remote-branch-list
  echo "LOCAL"
  cat ./orphaned-local-branch-list

  __cleanup_branch_list_files
}

function delete_orphaned_remote_branches {
  __set_branches $1
  for i in `cat ./orphaned-remote-branch-list`; do git push $1 ":$i"; done
  __cleanup_branch_list_files
}

function delete_orphaned_local_branches {
  __set_branches $1
  for i in `cat ./orphaned-local-branch-list`; do $(git branch -d $i); done
  __cleanup_branch_list_files
}

function delete_merged_local_branches {
  merged_branches=$(git branch --merged | sed "s/*/ /g");
  for i in $merged_branches; do
    $(git branch -d $i)
  done
}
